package pqt.dss.ptrf.model.eo;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 08 12:38:25 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssPlanTransferLineDetailsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TrDetailIdPk,
        TrLineIdFk,
        TrHeaderIdFk,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        PolicyNo,
        AgentNoFk,
        ParticipantName,
        CommencementDate,
        RegularContribtion,
        PlanMode,
        DueDateLastPayment,
        Status,
        DssPlanTransferLines;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRDETAILIDPK = AttributesEnum.TrDetailIdPk.index();
    public static final int TRLINEIDFK = AttributesEnum.TrLineIdFk.index();
    public static final int TRHEADERIDFK = AttributesEnum.TrHeaderIdFk.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int POLICYNO = AttributesEnum.PolicyNo.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int PARTICIPANTNAME = AttributesEnum.ParticipantName.index();
    public static final int COMMENCEMENTDATE = AttributesEnum.CommencementDate.index();
    public static final int REGULARCONTRIBTION = AttributesEnum.RegularContribtion.index();
    public static final int PLANMODE = AttributesEnum.PlanMode.index();
    public static final int DUEDATELASTPAYMENT = AttributesEnum.DueDateLastPayment.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int DSSPLANTRANSFERLINES = AttributesEnum.DssPlanTransferLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssPlanTransferLineDetailsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.ptrf.model.eo.DssPlanTransferLineDetails");
    }


    /**
     * Gets the attribute value for TrDetailIdPk, using the alias name TrDetailIdPk.
     * @return the value of TrDetailIdPk
     */
    public Number getTrDetailIdPk() {
        return (Number) getAttributeInternal(TRDETAILIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrDetailIdPk.
     * @param value value to set the TrDetailIdPk
     */
    public void setTrDetailIdPk(Number value) {
        setAttributeInternal(TRDETAILIDPK, value);
    }

    /**
     * Gets the attribute value for TrLineIdFk, using the alias name TrLineIdFk.
     * @return the value of TrLineIdFk
     */
    public Number getTrLineIdFk() {
        return (Number) getAttributeInternal(TRLINEIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrLineIdFk.
     * @param value value to set the TrLineIdFk
     */
    public void setTrLineIdFk(Number value) {
        setAttributeInternal(TRLINEIDFK, value);
    }

    /**
     * Gets the attribute value for TrHeaderIdFk, using the alias name TrHeaderIdFk.
     * @return the value of TrHeaderIdFk
     */
    public Number getTrHeaderIdFk() {
        return (Number) getAttributeInternal(TRHEADERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrHeaderIdFk.
     * @param value value to set the TrHeaderIdFk
     */
    public void setTrHeaderIdFk(Number value) {
        setAttributeInternal(TRHEADERIDFK, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for PolicyNo, using the alias name PolicyNo.
     * @return the value of PolicyNo
     */
    public String getPolicyNo() {
        return (String) getAttributeInternal(POLICYNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PolicyNo.
     * @param value value to set the PolicyNo
     */
    public void setPolicyNo(String value) {
        setAttributeInternal(POLICYNO, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for ParticipantName, using the alias name ParticipantName.
     * @return the value of ParticipantName
     */
    public String getParticipantName() {
        return (String) getAttributeInternal(PARTICIPANTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParticipantName.
     * @param value value to set the ParticipantName
     */
    public void setParticipantName(String value) {
        setAttributeInternal(PARTICIPANTNAME, value);
    }

    /**
     * Gets the attribute value for CommencementDate, using the alias name CommencementDate.
     * @return the value of CommencementDate
     */
    public Date getCommencementDate() {
        return (Date) getAttributeInternal(COMMENCEMENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommencementDate.
     * @param value value to set the CommencementDate
     */
    public void setCommencementDate(Date value) {
        setAttributeInternal(COMMENCEMENTDATE, value);
    }

    /**
     * Gets the attribute value for RegularContribtion, using the alias name RegularContribtion.
     * @return the value of RegularContribtion
     */
    public Number getRegularContribtion() {
        return (Number) getAttributeInternal(REGULARCONTRIBTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegularContribtion.
     * @param value value to set the RegularContribtion
     */
    public void setRegularContribtion(Number value) {
        setAttributeInternal(REGULARCONTRIBTION, value);
    }

    /**
     * Gets the attribute value for PlanMode, using the alias name PlanMode.
     * @return the value of PlanMode
     */
    public String getPlanMode() {
        return (String) getAttributeInternal(PLANMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlanMode.
     * @param value value to set the PlanMode
     */
    public void setPlanMode(String value) {
        setAttributeInternal(PLANMODE, value);
    }

    /**
     * Gets the attribute value for DueDateLastPayment, using the alias name DueDateLastPayment.
     * @return the value of DueDateLastPayment
     */
    public Date getDueDateLastPayment() {
        return (Date) getAttributeInternal(DUEDATELASTPAYMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DueDateLastPayment.
     * @param value value to set the DueDateLastPayment
     */
    public void setDueDateLastPayment(Date value) {
        setAttributeInternal(DUEDATELASTPAYMENT, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * @return the associated entity DssPlanTransferLinesImpl.
     */
    public DssPlanTransferLinesImpl getDssPlanTransferLines() {
        return (DssPlanTransferLinesImpl) getAttributeInternal(DSSPLANTRANSFERLINES);
    }

    /**
     * Sets <code>value</code> as the associated entity DssPlanTransferLinesImpl.
     */
    public void setDssPlanTransferLines(DssPlanTransferLinesImpl value) {
        setAttributeInternal(DSSPLANTRANSFERLINES, value);
    }


    /**
     * @param trDetailIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number trDetailIdPk) {
        return new Key(new Object[] { trDetailIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
      super.create(attributeList);
      Date currentDate = new Date();
      setEnterDate((Date) currentDate.getCurrentDate());
      setLastUpdatedDate((Date) currentDate.getCurrentDate());
      SequenceImpl seq = new SequenceImpl("DSS_PLAN_TRANSFER_LINE_DTL_SEQ", getDBTransaction());
      setTrDetailIdPk(seq.getSequenceNumber());
      
    //         setBranchStatus("INCOMPLETE");
    //         setDssStatus("INCOMPLETE");
      
      FacesContext fctx = FacesContext.getCurrentInstance();
      ExternalContext ectx = fctx.getExternalContext();
      HttpSession userSession = (HttpSession) ectx.getSession(false);
      try {
          setUserIdFk(new Number(userSession.getAttribute("pUserId")));
          setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
      } catch (SQLException ex) {
          setUserIdFk(new Number(0));
          setLastUpdatedBy(new Number(0));
      }
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Date currentDate = new Date();
            if (operation == DML_UPDATE) {
                setLastUpdatedDate((Date) currentDate.getCurrentDate());
                FacesContext fctx = FacesContext.getCurrentInstance();
                ExternalContext ectx = fctx.getExternalContext();
                HttpSession userSession = (HttpSession) ectx.getSession(false);
                try {
                    setUserIdFk(new Number(userSession.getAttribute("pUserId")));
//                    setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
                } catch (SQLException ex) {
                    setUserIdFk(new Number(0));
//                    setLastUpdatedBy(new Number(0));
                }
            }
            super.doDML(operation, e);
        }
}

